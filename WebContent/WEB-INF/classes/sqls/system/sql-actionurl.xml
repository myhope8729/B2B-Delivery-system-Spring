<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="actionurl">

	<typeAlias alias="menu" type="com.kpc.eos.model.system.MenuModel" />

	<select id="findMenuList" resultClass="menu">
		SELECT  menu_id 		AS menuId, 
		        menu_name 		AS menuName,
			    note 			AS menuDesc, 
				sort_no 		AS sortNo, 
				IFNULL((SELECT sort_no FROM eos_menu_new WHERE menu_id = A.upper_menu_id), A.sort_no) upperSortNo,
				upper_menu_id 	AS upperMenuId,
				(SELECT menu_name FROM eos_menu_new WHERE menu_id = A.upper_menu_id) upperMenuName,
				menu_url 		AS connUrl, 
				state 			AS state,
				menu_level		AS LEVEL,
				IF(MENU_LEVEL=2, 'true', 'false') AS isLeaf,
				'true' AS expanded
		 FROM	eos_menu_new A
		 WHERE	1=1 
		 ORDER BY 5,6,4
	</select>
	
	<select id="getMenu" resultClass="menu">
		SELECT	menu_id AS menuId, 
				menu_name AS menuName, 
				note AS menuDesc, 
				sort_no AS sortNo, 
				upper_menu_id AS upperMenuId, 
				(SELECT Y.menu_name AS menuName FROM eos_menu_new Y WHERE Y.menu_id = A.upper_menu_id) AS upperMenuName,
				'' AS menuLocation,
				menu_url AS connUrl, 
				state state
		  FROM eos_menu_new A
		 WHERE menu_id = #value#
	</select>
	
	<update id="updateMenu">
		UPDATE 	eos_menu_new
		   SET 	menu_name 		= #menuName#,
		   		note   			= #menuDesc#,
		   		sort_no 		= #sortNo#,
		   		upper_menu_id 	= IF(#upperMenuId#= '', NULL, #upperMenuId#),
		   		menu_url		= #connUrl#,
		   		state			= #state#
		 WHERE	menu_id 		= #menuId#
	</update>	
	
	<select id="checkHasUnderMenus" resultClass="Integer">
		SELECT COUNT(*)
		FROM eos_menu_new 
		WHERE upper_menu_id = #value#
		  AND state = 'ST0001'
	</select>
	
	<select id="getUpperMenuList" resultClass="java.util.HashMap">
		SELECT menu_id 		upperMenuId, 
		       menu_name	upperMenuName
		  FROM eos_menu_new 
		WHERE  menu_level = 1
	</select>	
	
	<update id="deleteMenu">
		UPDATE	eos_menu_new
		   SET	state				= 'ST0002'
		 WHERE	menu_id = #menuId#
	</update>
	
	<select id="hasAuthorityOfAction" resultClass="int">
		SELECT COUNT(*)
		  FROM eos_right_new A, eos_menu_new B
		 WHERE A.menu_id = #actionId#
		   AND A.menu_id = B.menu_id
		   AND B.state = 'ST0001'
		   AND A.EMP_ID = #adminId#
	</select>
	
	<select id="hasAuthorityOfUrlByEmp" resultClass="int">
		SELECT COUNT(1)
		  FROM (
				SELECT A.MENU_ID
				  FROM eos_right_new A, eos_menu_new B
				 WHERE B.menu_url = #actionUrl#
				   AND A.menu_id = B.menu_id
				   AND B.state = 'ST0001'
				   AND A.EMP_ID = #empId#
				   UNION 	
				SELECT A.menu_id
				  FROM eos_right_new A, eos_menu_new B, eos_menu_urls_new C
				 WHERE A.menu_id = B.menu_id
				   AND B.state = 'ST0001'		   
				   AND A.EMP_ID = #empId#
				   AND A.MENU_ID = C.MENU_ID
				   AND C.MENU_ACTION_URL = #actionUrl#
			   ) a	
	</select>	
	
	<select id="hasAuthorityOfUrlByUser" resultClass="int">
		SELECT COUNT(1)
		  FROM (
				SELECT A.MENU_ID
				  FROM eos_menu_set_new A, eos_menu_new B
				 WHERE B.menu_url = #actionUrl#
				   AND A.menu_id = B.menu_id
				   AND B.state = 'ST0001'
				   AND A.user_id = #userId#
				   UNION 	
				SELECT A.menu_id
				  FROM eos_menu_set_new A, eos_menu_new B, eos_menu_urls_new C
				 WHERE A.menu_id = B.menu_id
				   AND B.state = 'ST0001'		   
				   AND A.user_id = #userId#
				   AND A.MENU_ID = C.MENU_ID
				   AND C.MENU_ACTION_URL = #actionUrl#
			   ) a;
	</select>		
			
	
	<insert id="insertUserMenu">
		INSERT INTO eos_menu_set_new
			(USER_ID, MENU_ID, MENU_USER_NAME, STATE)
			SELECT #userId# AS USER_ID, m.MENU_ID, m.MENU_NAME, #state# AS STATE 
			  FROM eos_userkind_menu_new a, eos_menu_new m
			 WHERE a.user_kind = #userKind#
			   AND a.menu_id = m.MENU_ID
			   AND m.STATE = 'ST0001'
	</insert>
	
	<select id="findAccessibleMenuList" resultClass="menu">
		  SELECT   M.MENU_ID 		as menuId, 
		  		   S.MENU_USER_NAME as menuName,
		           M.UPPER_MENU_ID 	as UpperMenuId,
		           M.MENU_URL   	as connUrl
		    FROM   EOS_MENU_NEW M
		    JOIN   EOS_RIGHT_NEW R ON M.MENU_ID = R.MENU_ID
		    JOIN   EOS_MENU_SET_NEW S ON S.MENU_ID = M.MENU_ID AND S.USER_ID = #userId#
		   WHERE   R.EMP_ID = #empId#
		     AND   S.state = 'ST0001'
		ORDER BY   M.UPPER_MENU_ID, M.SORT_NO
	</select>
	
	<select id="findUserAccessibleMenuList" resultClass="menu">
		  SELECT   M.MENU_ID 		AS menuId, 
		  		   S.MENU_USER_NAME AS menuName,
		           M.UPPER_MENU_ID 	AS UpperMenuId,
		           M.MENU_URL   	AS connUrl
		    FROM   EOS_MENU_NEW M
		    JOIN   EOS_MENU_SET_NEW S ON M.MENU_ID = S.MENU_ID
		   WHERE   S.USER_ID = #userId#
		     AND   S.state = 'ST0001'		   
		ORDER BY   M.UPPER_MENU_ID, M.SORT_NO
	</select>
	
	<select id="getMenuSetListByUser" resultClass="menu">
		SELECT  C.menu_id			AS menuId,
				B.MENU_LEVEL 		AS LEVEL,
				B.MENU_NAME			AS menuName,
				B.SORT_NO			AS sortNo,
				IFNULL((SELECT sort_no FROM eos_menu_new WHERE menu_id = B.upper_menu_id), B.sort_no) upperSortNo,
				B.UPPER_MENU_ID     AS upperMenuId,
				IFNULL(A.menu_user_name, B.menu_name)	AS menuUserName,
			 	IF(A.state = 'ST0001', 'YES','NO')  	AS state,
			<!-- 	IFNULL(A.state, 'ST0002')  			 	AS state, -->
				IF(MENU_LEVEL=2, 'true', 'false') 		AS isLeaf,
				'true' 									AS expanded,
				A.MENU_ID								AS seqNo
		  FROM  eos_menu_set_new A RIGHT OUTER JOIN eos_userkind_menu_new C 
					ON A.menu_id = C.menu_id AND A.user_id = #userId#,
			    eos_menu_new B	    
		 WHERE  C.menu_id = B.menu_id 
		   AND  B.STATE = 'ST0001'	    
		   AND  C.user_kind = #userKind#
		 ORDER BY 5,6,4
	</select>
	
	<insert id="insertMenuSet">
		INSERT INTO eos_menu_set_new
			(USER_ID, MENU_ID, MENU_USER_NAME, STATE)
			VALUES
			(#userId#, #menuId#, #menuUserName#, IF(#state#="YES", "ST0001", "ST0002"))
	</insert>
	
	<update id="updateMenuSet">
		UPDATE  eos_menu_set_new
		   SET  menu_user_name 	= #menuUserName#,
		        state 			= IF(#state#="YES", "ST0001", "ST0002")
		 WHERE  user_id = #userId#
		   AND  menu_id = #menuId#	
	</update>
	
	<delete id="deleteMenuSet">
		DELETE FROM eos_menu_set_new WHERE user_id = #userId# AND  menu_id = #menuId#
	</delete>

		
</sqlMap>